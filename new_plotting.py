"""


Contains:

    
Author: Bryce Dixon
Version: 02.08.2023    
"""

import matplotlib
from matplotlib.colors import Normalize
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import numpy as np
import scipy.interpolate
import auxiliary as aux
import matplotlib.ticker as plticker

poster=False


###### allows me not to show plots
matplotlib.use('Agg')
plt.rcParams.update({'font.size': 18})

def offset_subtract(rv, flags, offsets):
    """Function to return the RVs with offsets subtracted

    Parameters
    ----------
    rv: array of floats
        y-axis array of the RVs
    flags: array of floats
        array of flags representing offsets generated by the combine_data function
    offsets: list or tuple of floats
        list or tuple of offsets ordered accordingly to the inputs in the combine_data function
    
    Returns
    -------
    y: array of floats
        array of RVs with offsets subtracted
    """
    
    y_off = []
    for i in range(len(flags)):
        if flags[i] == 0.:
                y_off.append(0.)
        else:
            for a in range(len(offsets)):
                off = a+1.
                if flags[i] == off:
                    y_off.append(offsets[a])
    y = rv - y_off
    return y



def data_plot(time, rv, xlabel = "time [BJD]", ylabel = "RVs [m/s]", y_err = None, flags = None, offsets = None, save_folder = None, savefilename = None):
    """_summary_

    Parameters
    ----------
    time: array of floats
        x-axis array of the observation times
    rv: array of floats
        y-axis array of the RVs
    xlabel: string, optional
        label of x-axis, defaults to "time [BJD]"
    ylabel: string, optional
        label of y-axis, defaults to "RVs [m/s]"
    y_err: array of floats, optional
        array of rv errors, defaults to None
    flags: array of floats, optional
        array of flags representing offsets generated by the combine_data function, defaults to None
    offsets: list or tuple of floats, optional
        list or tuple of offsets ordered accordingly to the inputs in the combine_data function, defaults to None
    save_folder: string, optional
        folder to save the plot, defaults to None
    savefilename: string, optional
        name of the save file, defaults to None
  
    """
    
    fig = plt.figure(figsize = (10,7))
    ax = fig.add_subplot(1,1,1)
    
    if offsets is None and flags is None:
        ax.errorbar(time, rv, yerr = y_err, fmt = '.', color = 'k')
        ax.set_xlabel(xlabel)
        ax.set_ylabel(ylabel)
    elif offsets is None and flags is not None:
        raise KeyError("offsets must be provided when flags are given")
    elif offsets is not None and flags is None:
        raise KeyError("flags must be provided if offsets are given")
    else:
        y = offset_subtract(rv, flags, offsets)
        ax.errorbar(time, y, yerr = y_err, fmt = '.', color = 'k')
        ax.set_xlabel(xlabel)
        ax.set_ylabel(ylabel) 
    
    if save_folder is not None:
        assert savefilename is not None, "You need to give both save_folder and savefilename to save the figure"
        plt.savefig(str(save_folder)+"/"+str(savefilename)+".png", bbox_inches='tight')
        if poster:
            plt.savefig(str(save_folder)+"/"+str(savefilename)+".pdf", bbox_inches='tight')

    if savefilename is not None and save_folder is None:
        print("Figure not saved, you need to provide savefilename and save_folder both")          
            
    
    plt.show()